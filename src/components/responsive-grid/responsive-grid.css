/* Responsive Grid Component Styles */
/* 
 * Grid column variables are defined in /src/styles/variables.css
 * and automatically adjust at different screen sizes.
 */

:host {
  display: block;
  width: 100%;
}

.responsive-grid {
  display: grid;
  gap: var(--grid-gap);
  width: 100%;
  align-items: stretch; /* Ensure items stretch to match tallest in row */
}

/* Grid column configurations using responsive variables */
.grid-cols-2 {
  grid-template-columns: var(--grid-cols-2);
}

.grid-cols-3 {
  grid-template-columns: var(--grid-cols-3);
}

.grid-cols-4 {
  grid-template-columns: var(--grid-cols-4);
}

.grid-cols-5 {
  grid-template-columns: var(--grid-cols-5);
}

.grid-cols-6 {
  grid-template-columns: var(--grid-cols-6);
}

.grid-cols-7 {
  grid-template-columns: var(--grid-cols-7);
}

.grid-cols-8 {
  grid-template-columns: var(--grid-cols-8);
}

/* Empty state styling */
.grid-empty-state {
  grid-column: 1 / -1;
  text-align: center;
  color: var(--secondary-text);
  font-family: var(--body-font);
  font-size: 0.9rem;
  font-style: italic;
  padding: var(--spacing-xl);
  background-color: rgba(255, 255, 255, 0.02);
  border: 1px dashed var(--border-color);
  border-radius: var(--border-radius-md);
}

/* Ensure grid items have consistent sizing and stretch to full height */
.responsive-grid ::slotted(*) {
  width: 100%;
  height: 100%; /* Make slotted items fill their grid cell height */
  display: flex;
  flex-direction: column;
}

/* Target the actual content containers within slotted elements */
.responsive-grid ::slotted(*) > * {
  flex: 1; /* Allow the main content to expand */
  display: flex;
  flex-direction: column;
}

/* Focus and accessibility */
.responsive-grid:focus-within {
  outline: 2px solid var(--accent-color);
  outline-offset: 2px;
  border-radius: var(--border-radius-md);
}
